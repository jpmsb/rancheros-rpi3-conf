#!/bin/bash
> /var/log/rede-wifi.log

##################################################
################## Funcoes #######################
##################################################
iniciarWiFi (){
    echo "Dentro de iniciarWifi: $se_esta_conectado"
    echo "$(date +%T) - subindo a rede..."
    echo "$(date +%T) - subindo a rede..." >> /var/log/rede-wifi.log
    ip link set $dispositivo down
    ip link set $dispositivo up

    echo "$(date +%T) - Iniciando o wpa_supplicant..."
    echo "$(date +%T) - Iniciando o wpa_supplicant..." >> /var/log/rede-wifi.log
    wpa_supplicant -B -D $driver -i $dispositivo -c $wpa_supplicant_conf
    echo "wpa_supplicant -B -D $driver -i $dispositivo -c $wpa_supplicant_conf"
}


pegarIP(){
    echo "$(date +%T) - rodando DHCP..."
    echo "$(date +%T) - rodando DHCP..." >> /var/log/rede-wifi.log
    dhcpcd $dispositivo
    sleep 15 && echo "nameserver 8.8.8.8" > /etc/resolv.conf
}


esperaConectar(){
    inicio=$(date +%s)
    while (true)
    do
        fim=$(date +%s)
        tempo=$((fim - inicio))
        if [ "$se_esta_conectado" != "Not connected." ] || [ "$tempo" -ne "120" ]; then
            break
        
        fi
    sleep 0.5
}


verificarScript(){
    # Verficar se este script esta rodando
    echo "$(date +%T) - Verificando se este script já está sendo executado..."
    este_processo=`basename $0`
    for processo in `ps h -o pid -C $este_processo`; do
            if [ $processo != $$ ]; then
                    retorno=1
                    exit 0
            else retorno=0
            fi
    done
}

verificarWPA_supplicant(){
    echo "$(date +%T) - Verificando se o wpa_supplicant já está sendo executado..."
    ps cax | grep wpa_supplicant > /dev/null
    if [ $? -eq 0 ]; then
        retorno=1
    else
        retorno=0
    fi
}

criar_wpa_supplicant_conf(){
> $wpa_supplicant_conf

if [ "$tipo" = "empresarial" ]; then
cat << EOF >> $wpa_supplicant_conf
ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
          network={
               ssid="$ssid"
               scan_ssid=1
               key_mgmt=WPA-EAP
               eap=PEAP
               identity="$usuario"
               password="$psk"
               phase1="peaplabel=0"
               phase2="auth=MSCHAPV2"
          }
EOF

elif [ "$tipo" = "pessoal" ]; then
cat << EOF >> $wpa_supplicant_conf
ctrl_interface=/run/wpa_supplicant
update_config=1
network={
        ssid="$ssid"
        psk=$psk
}
EOF
fi
}

##################################################
# Arquivo com os dados
. $1


# Verificando se o intervalo de checagem foi definido
if [ ! "$intervalo_de_checagem" ]; then
    echo "Falta definir o intervalo de checagem!!"
    exit 1
fi


# Verificar se o script ta rodando
verificarScript
if [ $retorno = 1 ]; then
    echo "$(date +%T) - Há outra instâcia em execução. Saindo..."
    exit 0

elif [ $retorno = 0 ]; then
    echo "$(date +%T) - Executando..."
fi


# Verificar se o wpa_supplicant está rodando
verificarWPA_supplicant
if [ $retorno = 0 ]; then
    echo "$(date +%T) - wpa_supplicant não está em execução."
    echo "$(date +%T) - Criando $wpa_supplicant_conf..."
    criar_wpa_supplicant_conf

elif [ $retorno = 1 ]; then
    echo "$(date +%T) - wpa_supplicant já está sendo executado. Pulando..."
  
fi


# Loop eterno para verificar se tem IP
while (true)
do
    ip=$(ip -4 addr show dev $dispositivo | grep inet |cut -d" " -f6 | head -n 1)
    ip_roteador=$(ip route | awk '/default/ { print $3 }' | head -n 1)
    se_esta_conectado=$(iw $dispositivo link)
    nome_da_rede=$(iw wlan0 link |grep SSID |cut -f2 -d " ")
    DNS=$(cat /etc/resolv.conf)
    
    echo "$(date +%T) - IP do roteador: $ip_roteador"

    ping -c 2 $ip_roteador 2>&1 >/dev/null
    rping=$?

    #if [ -z ${ip} ] || [ "$rping" -ne 0 ]; then
    if [ "$se_esta_conectado" = "Not connected." ]; then
        echo "$(date +%T) - Não está conectado!"
        echo "$(date +%T) - Não está conectado!!" >> /var/log/rede-wifi.log
        killall -9 wpa_supplicant
        iniciarWiFi
        sleep 10

    elif [ -z ${ip} ]; then
        pegarIP
        sleep 10

    elif [ "$DNS" != "nameserver 8.8.8.8" ]; then
        echo "nameserver 8.8.8.8" > /etc/resolv.conf

    else 
        sleep $intervalo_de_checagem
        echo "$(date +%T) - SSID: $nome_da_rede"
        echo "$(date +%T) - IP da interface $dispositivo: $ip"
    fi
done
