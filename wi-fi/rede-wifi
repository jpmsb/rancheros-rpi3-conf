#!/bin/bash

##################################################
################## Funcoes #######################
##################################################
iniciarWiFi (){
    echo "[$(date +%d/%m/%Y) - $(date +%T)] - Subindo a rede..."
    echo "[$(date +%d/%m/%Y) - $(date +%T)] - Subindo a rede..." >> /var/log/rede-wifi.log
    ip link set $dispositivo down
    ip link set $dispositivo up

    echo "[$(date +%d/%m/%Y) - $(date +%T)] - Iniciando o wpa_supplicant..."
    echo "[$(date +%d/%m/%Y) - $(date +%T)] - Iniciando o wpa_supplicant..." >> /var/log/rede-wifi.log
    wpa_supplicant -B -D $driver -i $dispositivo -c $wpa_supplicant_conf
    echo "[$(date +%d/%m/%Y) - $(date +%T)] - wpa_supplicant -B -D $driver -i $dispositivo -c $wpa_supplicant_conf"
    echo "[$(date +%d/%m/%Y) - $(date +%T)] - wpa_supplicant -B -D $driver -i $dispositivo -c $wpa_supplicant_conf"  >> /var/log/rede-wifi.log
}


pegarIP(){
    echo "[$(date +%d/%m/%Y) - $(date +%T)] - rodando DHCP..."
    echo "[$(date +%d/%m/%Y) - $(date +%T)] - rodando DHCP..." >> /var/log/rede-wifi.log
    dhcpcd $dispositivo
    sleep 15 && echo "nameserver 8.8.8.8" > /etc/resolv.conf
    
    ip=$(ip -4 addr show dev $dispositivo | grep inet |cut -d" " -f6 | head -n 1)
    echo "[$(date +%d/%m/%Y) - $(date +%T)] - IP da interface $dispositivo: $ip" >> /var/log/rede-wifi.log
}


esperaConectar(){
    echo "[$(date +%d/%m/%Y) - $(date +%T)] - Esperando a conexão ser estabelecida."
    echo "[$(date +%d/%m/%Y) - $(date +%T)] - Esperando a conexão ser estabelecida." >> /var/log/rede-wifi.log
    inicio=$(date +%s)
    while (true)
    do
        fim=$(date +%s)
        tempo=$((fim - inicio))
        se_esta_conectado=$(iw $dispositivo link)
        echo "[$(date +%d/%m/%Y) - $(date +%T)] - Tempo: $tempo"
        
        if [ "$se_esta_conectado" != "Not connected." ]; then
            echo "[$(date +%d/%m/%Y) - $(date +%T)] - Conectou!!"
            echo "[$(date +%d/%m/%Y) - $(date +%T)] - Conectou!!" >> /var/log/rede-wifi.log
            
            nome_da_rede=$(iw wlan0 link |grep SSID |cut -f2 -d ":")
            echo "[$(date +%d/%m/%Y) - $(date +%T)] - SSID:$nome_da_rede" >> /var/log/rede-wifi.log
            
            break
        
        elif [ "$tempo" = "120" ]; then
            echo "[$(date +%d/%m/%Y) - $(date +%T)] - Tempo esgotado!!!"
            echo "[$(date +%d/%m/%Y) - $(date +%T)] - Tempo esgotado!!!" >> /var/log/rede-wifi.log
            break
            
        fi
        sleep 0.5
    done
}


verificarScript(){
    # Verficar se este script esta rodando
    echo "[$(date +%d/%m/%Y) - $(date +%T)] - Verificando se este script já está sendo executado..."
    este_processo=`basename $0`
    for processo in `ps h -o pid -C $este_processo`; do
            if [ $processo != $$ ]; then
                    retorno=1
                    exit 0
            else retorno=0
            fi
    done
}

verificarWPA_supplicant(){
    echo "[$(date +%d/%m/%Y) - $(date +%T)] - Verificando se o wpa_supplicant já está sendo executado..."
    ps cax | grep wpa_supplicant > /dev/null
    if [ $? -eq 0 ]; then
        retorno=1
    else
        retorno=0
    fi
}

criar_wpa_supplicant_conf(){
> $wpa_supplicant_conf

if [ "$tipo" = "empresarial" ]; then
	cat <<-EOF > $wpa_supplicant_conf
	ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
	network={
	     ssid="$ssid"
	     scan_ssid=1
	     key_mgmt=WPA-EAP
	     eap=PEAP
	     identity="$usuario"
	     password="$psk"
	     phase1="peaplabel=0"
	     phase2="auth=MSCHAPV2"
	}
	EOF

elif [ "$tipo" = "pessoal" ]; then
    echo "[$(date +%d/%m/%Y) - $(date +%T)] - Testando se a senha é criptografada..."
    echo "[$(date +%d/%m/%Y) - $(date +%T)] - Testando se a senha é criptografada..." >> /var/log/rede-wifi.log
    senha_wpa=$(wpa_passphrase "$ssid" "$psk")
    if [ "$senha_wpa" = "Passphrase must be 8..63 characters" ]; then
        echo "[$(date +%d/%m/%Y) - $(date +%T)] - A senha é criptografada!! Isso é ótimo!! :)"
        echo "[$(date +%d/%m/%Y) - $(date +%T)] - A senha é criptografada!! Isso é ótimo!! :)" >> /var/log/rede-wifi.log
	cat <<-EOF > $wpa_supplicant_conf
	ctrl_interface=/run/wpa_supplicant
	update_config=1
	network={
	        ssid="$ssid"
	        psk=$psk
	}
	EOF
    else
        echo "[$(date +%d/%m/%Y) - $(date +%T)] - A senha não está criptografada!! Faça isso o quanto antes!!"
        echo "[$(date +%d/%m/%Y) - $(date +%T)] - A senha não está criptografada!! Faça isso o quanto antes!!" >> /var/log/rede-wifi.log
        echo "ctrl_interface=/run/wpa_supplicant" > $wpa_supplicant_conf
        echo "update_config=1" >> $wpa_supplicant_conf
        wpa_passphrase "$ssid" "$psk" >> $wpa_supplicant_conf
    fi
fi
}

##################################################
# Arquivo com os dados
. $1

# Verifica se foi definido o nome da rede
if [ -z "${ssid}" ]; then
    echo "[$(date +%d/%m/%Y) - $(date +%T)] - Não foi definido o nome da rede. Saindo..."
    echo "[$(date +%d/%m/%Y) - $(date +%T)] - Não foi definido o nome da rede. Saindo..." >> /var/log/rede-wifi.log
    exit 1
else
    echo "[$(date +%d/%m/%Y) - $(date +%T)] - Rede alvo: $ssid
    echo "[$(date +%d/%m/%Y) - $(date +%T)] - Rede alvo: $ssid >> /var/log/rede-wifi.log
fi


# Verificando se o intervalo de checagem foi definido
if [ ! "$intervalo_de_checagem" ]; then
    echo "[$(date +%d/%m/%Y) - $(date +%T)] - Falta definir o intervalo de checagem!!"
    exit 1
fi


# Verificar se o script ta rodando
verificarScript
if [ $retorno = 1 ]; then
    echo "[$(date +%d/%m/%Y) - $(date +%T)] - Há outra instâcia em execução. Saindo..."
    exit 0

elif [ $retorno = 0 ]; then
    echo "[$(date +%d/%m/%Y) - $(date +%T)] - Executando..."
fi


# Marcação no arquivo de log
echo "##################################################" >> /var/log/rede-wifi.log
echo "[$(date +%d/%m/%Y) - $(date +%T)] - Iniciando..." >> /var/log/rede-wifi.log


# Verificar se o wpa_supplicant está rodando
verificarWPA_supplicant
if [ $retorno = 0 ]; then
    echo "[$(date +%d/%m/%Y) - $(date +%T)] - wpa_supplicant não está em execução."
    echo "[$(date +%d/%m/%Y) - $(date +%T)] - Criando $wpa_supplicant_conf..."
    
    echo "[$(date +%d/%m/%Y) - $(date +%T)] - wpa_supplicant não está em execução." >> /var/log/rede-wifi.log
    echo "[$(date +%d/%m/%Y) - $(date +%T)] - Criando $wpa_supplicant_conf..." >> /var/log/rede-wifi.log
    
    criar_wpa_supplicant_conf

elif [ $retorno = 1 ]; then
    echo "[$(date +%d/%m/%Y) - $(date +%T)] - wpa_supplicant já está sendo executado. Pulando..."
    echo "[$(date +%d/%m/%Y) - $(date +%T)] - wpa_supplicant já está sendo executado. Pulando..." >> /var/log/rede-wifi.log
  
fi


# Loop eterno para verificar se tem IP
while (true)
do
    ip=$(ip -4 addr show dev $dispositivo | grep inet |cut -d" " -f6 | head -n 1)
    ip_roteador=$(ip route | awk '/default/ { print $3 }' | head -n 1)
    se_esta_conectado=$(iw $dispositivo link)
    nome_da_rede=$(iw wlan0 link |grep SSID |cut -f2 -d ":")
    DNS_atual=$(cat /etc/resolv.conf)
    
    echo "[$(date +%d/%m/%Y) - $(date +%T)] - IP do roteador: $ip_roteador"

    ping -c 2 $ip_roteador 2>&1 >/dev/null
    rping=$?

    if [ "$se_esta_conectado" = "Not connected." ]; then
        echo "[$(date +%d/%m/%Y) - $(date +%T)] - Não está conectado!"
        echo "[$(date +%d/%m/%Y) - $(date +%T)] - Não está conectado!!" >> /var/log/rede-wifi.log
        killall -9 wpa_supplicant
        iniciarWiFi
        esperaConectar
        sleep 10

    elif [ -z ${ip} ]; then
        pegarIP
        sleep 10

    elif [ "$DNS_atual" != "nameserver $DNS_desejado" ]; then
        echo "[$(date +%d/%m/%Y) - $(date +%T)] - Adicionando o DNS $DNS_desejado."
        echo "[$(date +%d/%m/%Y) - $(date +%T)] - Adicionando o DNS $DNS_desejado." >> /var/log/rede-wifi.log
        echo "nameserver $DNS_desejado" > /etc/resolv.conf

    else 
        sleep $intervalo_de_checagem
        echo "[$(date +%d/%m/%Y) - $(date +%T)] - SSID:$nome_da_rede"
        echo "[$(date +%d/%m/%Y) - $(date +%T)] - IP da interface $dispositivo: $ip"
    fi
done
